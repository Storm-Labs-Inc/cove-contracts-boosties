name: "Base Setup"
description: "Set up the base environment"
inputs:
  node-version:
    description: "Node.js version"
    required: true
  python-version:
    description: "Python version"
    required: true

runs:
  using: "composite"
  steps:
    - name: Generate combined hash of direct submodule versions
      run: |
        modules=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')
        for module in $modules
        do
          if [[ $module == lib/* ]]
          then
            echo "generating hash for $module"
            git --no-pager diff -- $module
          fi
        done > ./lib/commit-hash
      shell: bash

    - name: Cache Submodules
      uses: actions/cache@v3
      id: cache-submodules
      with:
        path: ./lib
        key: ${{ runner.os }}-submodules-${{ hashFiles('./lib/commit-hash') }}

    - name: Checkout submodules
      if: steps.cache-submodules.outputs.cache-hit != 'true'
      run: git submodule update --init --recursive
      shell: bash

    - uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install Node.js
      uses: buildjet/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        cache: pnpm

    - name: Install Python
      uses: buildjet/setup-python@v4
      if: inputs.python-version != 'null'
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip

    - name: Install Python dependencies
      if: inputs.python-version != 'null'
      run: pip install -r requirements-ci.txt
      shell: bash

    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly

    - name: Install dependencies
      run: pnpm install
      shell: bash
